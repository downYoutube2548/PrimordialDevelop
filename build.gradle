plugins {
    id 'java'
}

group = 'com.develop.primordial'
version = '1.0'

repositories {
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'mmoitems'
        url = 'https://mvn.lumine.io/repository/maven-public/'
    }
    maven {
        name = 'mmocore'
        url = 'https://mvn.lumine.io/repository/maven-public/'
    }
    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
    maven {
        url = 'https://repo.dmulloy2.net/repository/public/'
    }
    maven {
        url = 'https://repo.codemc.org/repository/maven-public/'
    }
    maven {
        url = 'https://jitpack.io'
    }

}

dependencies {
    compileOnly 'org.spigotmc:spigot:1.17.1-R0.1-SNAPSHOT'
    compileOnly("de.tr7zw:item-nbt-api-plugin:2.8.0")
    compileOnly("net.Indyuce:MMOItems:6.6.3")
    compileOnly("io.lumine:MythicLib-dist:1.2")
    compileOnly("net.Indyuce:MMOCore:1.8.3")
    compileOnly 'me.clip:placeholderapi:2.11.1'
    compileOnly fileTree('libs')
    compileOnly fileTree('ProjectWrapper')
    compileOnly group: "com.comphenix.protocol", name: "ProtocolLib", version: "4.8.0";
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"
    compileOnly 'net.luckperms:api:5.4'
}

def targetJavaVersion = 16
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}
